{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Documents\\\\KULIAH\\\\SMT_4\\\\PKWU\\\\Prototype\\\\frontend\\\\src\\\\components\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './Chart.css';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Chart = () => {\n  _s();\n  const [timeRange, setTimeRange] = useState('hour'); // 'hour', 'day', 'week'\n  const [temperatureData, setTemperatureData] = useState([]);\n  const [humidityData, setHumidityData] = useState([]);\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Calculate limit based on time range\n        let limit;\n        switch (timeRange) {\n          case 'hour':\n            limit = 60; // Last 60 readings (assuming 1 per minute)\n            break;\n          case 'day':\n            limit = 24 * 60; // Last 24 hours\n            break;\n          case 'week':\n            limit = 7 * 24 * 12; // Last week (12 readings per hour)\n            break;\n          default:\n            limit = 60;\n        }\n\n        // Fetch temperature data\n        const tempResponse = await fetch(`${API_URL}/api/readings?type=temperature&limit=${limit}`);\n        const tempData = await tempResponse.json();\n        setTemperatureData(tempData.reverse()); // Reverse to get chronological order\n\n        // Fetch humidity data\n        const humResponse = await fetch(`${API_URL}/api/readings?type=humidity&limit=${limit}`);\n        const humData = await humResponse.json();\n        setHumidityData(humData.reverse()); // Reverse to get chronological order\n      } catch (error) {\n        console.error('Error fetching chart data:', error);\n      }\n    };\n    fetchData();\n\n    // Set up interval to fetch data periodically\n    const interval = setInterval(fetchData, 60000); // Update every minute\n\n    return () => clearInterval(interval);\n  }, [timeRange, API_URL]);\n\n  // Process data for the chart\n  const labels = temperatureData.map(reading => {\n    const date = new Date(reading.timestamp);\n\n    // Format the time based on the selected range\n    if (timeRange === 'hour') {\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else if (timeRange === 'day') {\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else {\n      return date.toLocaleDateString([], {\n        month: 'numeric',\n        day: 'numeric'\n      }) + ' ' + date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  });\n  const chartData = {\n    labels,\n    datasets: [{\n      label: 'Temperature (°C)',\n      data: temperatureData.map(reading => reading.value),\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      yAxisID: 'y'\n    }, {\n      label: 'Humidity (%)',\n      data: humidityData.map(reading => reading.value),\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\n      yAxisID: 'y1'\n    }]\n  };\n  const options = {\n    responsive: true,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    stacked: false,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Temperature and Humidity Over Time'\n      }\n    },\n    scales: {\n      y: {\n        type: 'linear',\n        display: true,\n        position: 'left',\n        title: {\n          display: true,\n          text: 'Temperature (°C)'\n        },\n        min: 35,\n        max: 40\n      },\n      y1: {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        title: {\n          display: true,\n          text: 'Humidity (%)'\n        },\n        min: 40,\n        max: 80,\n        grid: {\n          drawOnChartArea: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: timeRange === 'hour' ? 'active' : '',\n        onClick: () => setTimeRange('hour'),\n        children: \"Last Hour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: timeRange === 'day' ? 'active' : '',\n        onClick: () => setTimeRange('day'),\n        children: \"Last 24 Hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: timeRange === 'week' ? 'active' : '',\n        onClick: () => setTimeRange('week'),\n        children: \"Last Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: temperatureData.length > 0 && humidityData.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-chart\",\n        children: \"Loading chart data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(Chart, \"87WgXxYKhvng1ZFxRZ7WwEbWU6I=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","_s","timeRange","setTimeRange","temperatureData","setTemperatureData","humidityData","setHumidityData","API_URL","process","env","REACT_APP_API_URL","fetchData","limit","tempResponse","fetch","tempData","json","reverse","humResponse","humData","error","console","interval","setInterval","clearInterval","labels","map","reading","date","Date","timestamp","toLocaleTimeString","hour","minute","toLocaleDateString","month","day","chartData","datasets","label","data","value","borderColor","backgroundColor","yAxisID","options","responsive","interaction","mode","intersect","stacked","plugins","title","display","text","scales","y","type","position","min","max","y1","grid","drawOnChartArea","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Documents/KULIAH/SMT_4/PKWU/Prototype/frontend/src/components/Chart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport './Chart.css';\r\n\r\n// Register ChartJS components\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst Chart = () => {\r\n  const [timeRange, setTimeRange] = useState('hour'); // 'hour', 'day', 'week'\r\n  const [temperatureData, setTemperatureData] = useState([]);\r\n  const [humidityData, setHumidityData] = useState([]);\r\n  \r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Calculate limit based on time range\r\n        let limit;\r\n        switch(timeRange) {\r\n          case 'hour':\r\n            limit = 60; // Last 60 readings (assuming 1 per minute)\r\n            break;\r\n          case 'day':\r\n            limit = 24 * 60; // Last 24 hours\r\n            break;\r\n          case 'week':\r\n            limit = 7 * 24 * 12; // Last week (12 readings per hour)\r\n            break;\r\n          default:\r\n            limit = 60;\r\n        }\r\n        \r\n        // Fetch temperature data\r\n        const tempResponse = await fetch(`${API_URL}/api/readings?type=temperature&limit=${limit}`);\r\n        const tempData = await tempResponse.json();\r\n        setTemperatureData(tempData.reverse()); // Reverse to get chronological order\r\n        \r\n        // Fetch humidity data\r\n        const humResponse = await fetch(`${API_URL}/api/readings?type=humidity&limit=${limit}`);\r\n        const humData = await humResponse.json();\r\n        setHumidityData(humData.reverse()); // Reverse to get chronological order\r\n      } catch (error) {\r\n        console.error('Error fetching chart data:', error);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n    \r\n    // Set up interval to fetch data periodically\r\n    const interval = setInterval(fetchData, 60000); // Update every minute\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [timeRange, API_URL]);\r\n  \r\n  // Process data for the chart\r\n  const labels = temperatureData.map(reading => {\r\n    const date = new Date(reading.timestamp);\r\n    \r\n    // Format the time based on the selected range\r\n    if (timeRange === 'hour') {\r\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n    } else if (timeRange === 'day') {\r\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n    } else {\r\n      return date.toLocaleDateString([], { month: 'numeric', day: 'numeric' }) + ' ' + \r\n             date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n    }\r\n  });\r\n  \r\n  const chartData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Temperature (°C)',\r\n        data: temperatureData.map(reading => reading.value),\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n        yAxisID: 'y',\r\n      },\r\n      {\r\n        label: 'Humidity (%)',\r\n        data: humidityData.map(reading => reading.value),\r\n        borderColor: 'rgb(53, 162, 235)',\r\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        yAxisID: 'y1',\r\n      },\r\n    ],\r\n  };\r\n  \r\n  const options = {\r\n    responsive: true,\r\n    interaction: {\r\n      mode: 'index',\r\n      intersect: false,\r\n    },\r\n    stacked: false,\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: 'Temperature and Humidity Over Time',\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        type: 'linear',\r\n        display: true,\r\n        position: 'left',\r\n        title: {\r\n          display: true,\r\n          text: 'Temperature (°C)',\r\n        },\r\n        min: 35,\r\n        max: 40,\r\n      },\r\n      y1: {\r\n        type: 'linear',\r\n        display: true,\r\n        position: 'right',\r\n        title: {\r\n          display: true,\r\n          text: 'Humidity (%)',\r\n        },\r\n        min: 40,\r\n        max: 80,\r\n        grid: {\r\n          drawOnChartArea: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n  \r\n  return (\r\n    <div className=\"chart-wrapper\">\r\n      <div className=\"chart-controls\">\r\n        <button \r\n          className={timeRange === 'hour' ? 'active' : ''} \r\n          onClick={() => setTimeRange('hour')}\r\n        >\r\n          Last Hour\r\n        </button>\r\n        <button \r\n          className={timeRange === 'day' ? 'active' : ''} \r\n          onClick={() => setTimeRange('day')}\r\n        >\r\n          Last 24 Hours\r\n        </button>\r\n        <button \r\n          className={timeRange === 'week' ? 'active' : ''} \r\n          onClick={() => setTimeRange('week')}\r\n        >\r\n          Last Week\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"chart\">\r\n        {temperatureData.length > 0 && humidityData.length > 0 ? (\r\n          <Line data={chartData} options={options} />\r\n        ) : (\r\n          <div className=\"loading-chart\">Loading chart data...</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}